<?php

namespace app\controllers;

use app\models\Product;
use app\models\ProductCreateForm;
use app\models\ProductSearch;
use Yii;
use app\models\User;
use app\models\UserSearch;
use yii\helpers\Url;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;
use yii\web\UploadedFile;
use app\models\Category;
use yii\helpers\ArrayHelper;


/**
 * UserController implements the CRUD actions for User model.
 */
class LkController extends Controller
{
    public function beforeAction($action)
    {
        $url = Url::toRoute(['site/login']);
        if (\Yii::$app->user->isGuest || \Yii::$app->user->identity->admin == 1) {
            return $this->redirect($url);
        }
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * {@inheritdoc}
     */
    public function behaviors()
    {
        return [
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'delete' => ['POST'],
                ],
            ],
        ];
    }

    /**
     * Lists all User models.
     * @return mixed
     */

    public function actionIndex()
    {
        $searchModel = new ProductSearch();
        $dataProvider = $searchModel->searchForUser(Yii::$app->request->queryParams, \Yii::$app->getUser()->getId());

        return $this->render('index', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);
    }

    /**
     * Displays a single User model.
     * @param integer $id
     * @return mixed
     * @throws NotFoundHttpException if the model cannot be found
     */

        public function actionView($id)
    {
        return $this->render('view', [
            'model' => $this->findModel($id),
        ]);
    }


    /**
     * Creates a new User model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return mixed
     */
    public function actionCreate()
    {
        $model = new ProductCreateForm();

        var_dump(Yii::$app->request->post());
        if ($model->load(Yii::$app->request->post())) {
            $model->photoBefore = UploadedFile::getInstance($model, 'photoBefore');
            $model->idUser = \Yii::$app->user->identity->id;
            if ($model->save()) {
                Yii::$app->session->setFlash('success', 'Заявка успешно создана');
                return $this->refresh();
            }
        }

        $categories = Category::find()->all();
        $categories = ArrayHelper::map($categories, 'id', 'name');

        return $this->render('create', [
            'model' => $model,
            'categories' => $categories
        ]);
    }

    public function actionDelete($id)
    {
        $model = $this->findModel($id);

        if($model->status == 'В наличии'){
            $model->delete();
            Yii::$app->session->setFlash('success', 'Заявка успешно удалена');
        } else {
            Yii::$app->session->setFlash('danger', 'Заявка не может быть удалена, так как её статус был изменён админом');
        }
        return $this->redirect(['index']);

}

    /**
     * Creates a new Product model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return mixed
     */
    protected function findModel($id)
    {
        if (($model = Product::findOne($id)) !== null) {
            return $model;
        }

        throw new NotFoundHttpException('The requested page does not exist.');
    }

}
